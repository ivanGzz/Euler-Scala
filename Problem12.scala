/**
 * Created by Nelson on 3/27/2016.
 *
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 +
 * 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 *
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 *
 * 1: 1
 * 3: 1, 3
 * 6: 1, 2, 3, 6
 * 10: 1, 2, 5, 10
 * 15: 1, 3, 5, 15
 * 21: 1, 3, 7, 21
 * 28: 1, 2, 4, 7, 14, 28
 *
 * We can see that 28 is the first triangle number to have over five divisors.
 *
 * What is the value of the first triangle number to have over five hundred divisors.
 *
 */
object Problem12 {

    def longStream(pred: Long, upTo: Long): Stream[Long] = {
        if (pred == upTo) {
            pred #:: Stream.empty
        } else {
            pred #:: longStream(pred + 1, upTo)
        }
    }

    def getSum(n: Long): Long = n * ( n + 1) / 2

    def getDivisors(n: Long): Long =  {
        val up = n / 2 + 1
        longStream(1, up).count(n % _ == 0) + 1
    }

    def getMax(n: Int): Long = {
        val sum = getSum(n)
        val divisors = getDivisors(sum)
        if (divisors > 500) {
            sum
        } else {
            getMax(n + 1)
        }
    }

    def main(args: Array[String]): Unit = {
        println(getMax(1))
    }

}
